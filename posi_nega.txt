//@version=5
indicator("RSI Anomaly Detection with Positive and Negative Movements", overlay=false)

// ユーザーが設定できるパラメータ
rsi_length = input.int(14, title="RSI Length")  // RSIの期間

// RSIの計算
rsi = ta.rsi(close, rsi_length)

// RSIの変動量を計算（1期間前と比較）
rsi_change = rsi - rsi[1]

// 一つ目の条件: RSIが+3～5、または-3～-5の範囲で動いた場合
first_step_posi = rsi_change > 3 and rsi_change <= 5
first_step_nega = rsi_change < -3 and rsi_change >= -5

// 二つ目の条件: 一つ目の条件が満たされた後、次のRSIが+8～10、または-8～-10の範囲で動いた場合
second_step_posi = first_step_posi[1] and rsi_change > 7 and rsi_change <= 10
second_step_nega = first_step_nega[1] and rsi_change < -7 and rsi_change >= -10

// 異常検知（正負両方向）
is_anomaly_posi = second_step_posi
is_anomaly_nega = second_step_nega

// RSIの変動量をプロット
plot(rsi_change, title="RSI Change", color=color.purple, linewidth=2)

// 異常箇所をプロット（正方向の異常検知は赤い三角形、負方向の異常検知は青い三角形）
plotshape(series=is_anomaly_posi, location=location.abovebar, color=color.red, style=shape.triangledown, size=size.small, title="Positive Anomaly Detected")

// 負方向の異常のプロット（位置をさらに下にし、サイズを小さく調整）
plotshape(series=is_anomaly_nega, location=location.abovebar, color=color.blue, style=shape.triangledown, size=size.small, title="Negative Anomaly Detected")

// 背景色を異常時に変更
bgcolor(is_anomaly_posi ? color.new(color.red, 90) : na)
bgcolor(is_anomaly_nega ? color.new(color.blue, 90) : na)